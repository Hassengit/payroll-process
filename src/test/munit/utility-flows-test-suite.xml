<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="utility-flows-test-suite.xml" />
	<munit:test name="getCostCenterInformation_subFlowTest" doc:id="b6531b8e-4cd8-42ea-bb52-f8a1f31f8c57" description="This test validates that when retrieving the cost center lookup information, the resulting JSON is transformed as expected and records are removed that do not have a cost center.">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when startLogCostCenterRetrieval_subFlow" doc:id="6dae130d-4113-48da-9f98-87714c512030" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="startLogCostCenterRetrieval_subFlow" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when HTTP REQUEST Get Custom Location info" doc:id="9540cd8e-db5d-44aa-9cef-470759aa5545" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get Custom Location Information from Workday System API" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- read(MunitTools::getResourceAsString('testFiles/costCenterHttpResponse.json'), &quot;application/json&quot;)]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when endLogCostCenterRetrieval_subFlow" doc:id="e2d8e8c3-7dcc-48ea-948a-77f5dc5aec38" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="endLogCostCenterRetrieval_subFlow" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getCostCenterInformation_subFlow" doc:id="57eca493-72e5-4d83-b50e-fcb52b41d584" name="getCostCenterInformation_subFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert mimeType of payload is application/json" doc:id="3f64cca8-8eb6-4f58-99ff-70b83d15c6e7" actual="#[payload.^mimeType]" expected="#['application/json']" message="The payloads mimeType is not application/json"/>
			<munit-tools:assert-that doc:name="Assert that payload is transformed as expected" doc:id="ef69bb07-3bc7-4395-808e-1b1e7839525f" expression="#[payload]" is="#[MunitTools::equalTo(readUrl('classpath://testFiles/costCenterTransform.json', 'application/json'))]" message="The payload was not transformed properly, please review and try again."/>
		</munit:validation>
	</munit:test>


</mule>
